- How did viewing a diff between two versions of a file help you see the bug that
was introduced?
-  it highlighted the differences

-How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
-It improves scalability, flexibility and control over all the program history

-What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
-Automatically changed commits can often be useless, while choosing to make a commit
need a little bit of effort 

-Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
-Committing more files all at once might be very useful when a single change affects 
more files, while when different an not related files are treated together, maybe a commit of 
this kind might not be such useful

-How can you use the commands git log and git diff to view the history of files?
-check the differences between files 

-How might using version control make you more confident to make changes that
could break something?
-I am absolutely sure that the old version will be retrievable

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer her
